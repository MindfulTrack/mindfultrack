# Generated by Django 5.0 on 2024-03-09 20:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DayOfWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayOfWeek', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'baseapp_dayofweek',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueueLeaveReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leaveReason', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'baseapp_queueleavereason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.CharField(default='https://picsum.photos/id/147/2000/1700', max_length=500)),
            ],
            options={
                'db_table': 'baseapp_resourcecategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'baseapp_resourcedetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('student', models.CharField(blank=True, max_length=255, null=True)),
                ('appointment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.TimeField()),
                ('endTime', models.TimeField()),
                ('dayOfWeek', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'baseapp_timeslot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('addressLineOne', models.CharField(max_length=255)),
                ('addressLineTwo', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=2)),
                ('zipCode', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'baseapp_university',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('eventLocation', models.CharField(max_length=255)),
                ('backgroundColor', models.CharField(max_length=255)),
                ('allDay', models.BooleanField()),
                ('editable', models.BooleanField()),
                ('oneDayEvent', models.BooleanField()),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AvailableTimeSlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dayOfWeek', models.CharField(blank=True, max_length=255, null=True)),
                ('person', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('timeSlot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='baseapp.timeslot')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('events', models.ManyToManyField(to='baseapp.calendarevent')),
                ('person', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='baseapp.university')),
            ],
        ),
        migrations.AddField(
            model_name='calendarevent',
            name='organizer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='baseapp.person'),
        ),
        migrations.CreateModel(
            name='StudentQueue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField(blank=True, null=True)),
                ('queueTime', models.BigIntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=1048, null=True)),
                ('leaveReason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='baseapp.queueleavereason')),
                ('person', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='student_queue', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
