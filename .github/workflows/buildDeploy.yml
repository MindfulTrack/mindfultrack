# name: Deploy to AWS

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build and Push Next.js App 1 Docker Image
#         uses: azure/docker-login@v1
#         with:
#           login-server: ${{ secrets.AWS_ECR_REGISTRY }}
#           username: AWS
#           password: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         run: |
#           docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/nextjs-app-1:${{ github.sha }} ./nextjs-app-1
#           docker push ${{ secrets.AWS_ECR_REGISTRY }}/nextjs-app-1:${{ github.sha }}

#       - name: Build and Push Next.js App 2 Docker Image
#         uses: azure/docker-login@v1
#         with:
#           login-server: ${{ secrets.AWS_ECR_REGISTRY }}
#           username: AWS
#           password: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         run: |
#           docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/nextjs-app-2:${{ github.sha }} ./nextjs-app-2
#           docker push ${{ secrets.AWS_ECR_REGISTRY }}/nextjs-app-2:${{ github.sha }}

#       - name: Build and Push Django App Docker Image
#         uses: azure/docker-login@v1
#         with:
#           login-server: ${{ secrets.AWS_ECR_REGISTRY }}
#           username: AWS
#           password: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         run: |
#           docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/django-app:${{ github.sha }} ./django-app
#           docker push ${{ secrets.AWS_ECR_REGISTRY }}/django-app:${{ github.sha }}

#       - name: Deploy to AWS ECS
#         uses: aws-actions/amazon-ecr-login@v1
#         with:
#           registry: ${{ secrets.AWS_ECR_REGISTRY }}
#         run: |
#           # Use AWS CLI or ECS CLI to deploy your containers to AWS ECS
#           # Example: aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
